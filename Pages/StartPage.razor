@inject HttpClient Http
@inject NavigationManager NM

@using Newtonsoft.Json
@using TriviaFrontend.Models

<div>
    <h4>How many questions do you like to take?</h4>
    <h6>Max 50</h6>
    <input type="number" min="1" max="50" value="@NumberOfQuestions" @onchange="@setNumberOfQuestions" />
</div>
<br />
<h6>Select a category if you want</h6>
<h5>Select a category</h5>
<h6>Select 1</h6>

<div style="border:solid grey 2px">
    @if (categories == null)
    {
        <h5>Loading....</h5>
    }
    else
    {
        @foreach (var item in categories)
        {
            <input type="button" value="@item.Name" @onclick="() => setId(item.ID)" />
        }
    }
</div>
<div>
    <br />
    <h5>You have choices:</h5>
    <h6>Number of questions: @NumberOfQuestions</h6>
    @if (CategoryName == null)
    {

        <h6>Category: All</h6>
    }
    else
    {
        <h6>Category: @CategoryName</h6>
    }
</div>
<input type="button" value="Start" @onclick="@Start" />
@code {
    public List<TriviaCategories> categories = new List<TriviaCategories>();

    public int CategoryID { get; set; }
    public int NumberOfQuestions { get; set; } = 10;

    public string CategoryName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var httpResponse = await Http.GetAsync($"https://localhost:44321/api/Response/categories");
        if (!httpResponse.IsSuccessStatusCode)
        {
            string errorMessage = httpResponse.ReasonPhrase;
            NM.NavigateTo("/errorpage");
        }
        else
        {
            var jsonCategories = await httpResponse.Content.ReadAsStringAsync();
            categories = JsonConvert.DeserializeObject<List<TriviaCategories>>(jsonCategories);
        }
    }
    public void setId(int id)
    {
        CategoryID = id;
        var temp = categories.FirstOrDefault(x => x.ID == id);
        CategoryName = temp.Name;
    }
    void setNumberOfQuestions(ChangeEventArgs args)
    {
        NumberOfQuestions = Convert.ToInt32(args.Value);
    }
    void Start()
    {
        if (CategoryID == 0)
        {
            NM.NavigateTo($"/questions/{NumberOfQuestions}");
        }
        else
        {
            NM.NavigateTo($"/questions/{CategoryID}/{NumberOfQuestions}");
        }
    }
}